health.status.path = "/app/isHealthy"

kafka {
  producer {
    topic = "proto-spans"
    props {
      bootstrap.servers = "kafkasvc:9092"
    }
  }
}

kinesis {
  aws.region = "us-west-2"

  app.group.name = "haystack-kinesis-proto-span-collector"

  stream {
    name = "haystack-proto-spans"
    position = "LATEST"
  }

  checkpoint {
    interval.ms = 15000
    retries = 50
    retry.interval.ms = 250
  }

  task.backoff.ms = 200
  max.records.read = 2000
  idle.time.between.reads.ms = 500
  shard.sync.interval.ms = 30000

  metrics {
    level = "NONE"
    buffer.time.ms = 10000
  }
}

additionaltags.X-HAYSTACK-SPAN-ADDITIONAL-TAG = ADDITIONAL-TAG

external.kafka.kafka1 {
    tags {
        X-HAYSTACK-SPAN-OWNER = OWNER1
        X-HAYSTACK-SPAN-SENDER = SENDER1
    }
    config {
        topic = "external-proto-spans"
        props {
            bootstrap.servers = "kafkasvc:9092"
        }
    }
}

ratelimiter {
    throttle.at = 12000
}

plugins {
    directory = plugins/decorators
    plugin1 {
        name="SAMPLE_SPAN_DECORATOR"
        config {
            tag.key = "X-HAYSTACK-PLUGIN-SPAN-DECORATOR"
        }
    }
}
