health.status.path = "/app/isHealthy"

haystack.graphite.host = "monitoring-influxdb-graphite.kube-system.svc"

kafka {
  producer {
    topic = "proto-spans"
    props {
      bootstrap.servers = "kafkasvc:9092"
    }
  }
}

extractor {
  output.format = "proto"
    # to validate size of span
    # truncate all the tags except error when size exceeds allowed limit
    # allowed add tag to indicate truncation
  spans.validation {
    max.size {
      enable = false
      max.size.limit = 5000 // in bytes
      message.tag.key = "X-HAYSTACK-SPAN-INFO"
      message.tag.value = "Tags are truncated. REASON: Span Size Limit Exceeded. Please contact Haystack for more details"
    }
  }
}

kinesis {
  #optional, uncomment following if you want to connect to kinesis using sts role arn
  #sts.role.arn = "provide the arn here"

  aws.region = "us-west-2"
  app.group.name = "haystack-kinesis-proto-span-collector"

  stream {
    name = "haystack-proto-spans"
    position = "LATEST"
  }

  checkpoint {
    interval.ms = 15000
    retries = 50
    retry.interval.ms = 250
  }

  task.backoff.ms = 200
  max.records.read = 2000
  idle.time.between.reads.ms = 500
  shard.sync.interval.ms = 30000

  metrics {
    level = "NONE"
    buffer.time.ms = 15000
  }
}
